<!DOCTYPE html> <html style>
    <meta charset=utf-8><title>Human-AI Decision-Making</title>
    <meta name=viewport content="width=device-width, initial-scale=1">
    <meta http-equiv=X-UA-Compatible content="ie=edge">
    <meta name=referrer content=no-referrer>
    <link rel="shortcut icon" href=data:, data-sf-original-href=http://vancuvrboy.github.io/index.htm>
    <style>.sf-hidden{display:none!important}</style>
    <link rel=canonical href=http://vancuvrboy.github.io/index.htm>
    <meta http-equiv=content-security-policy content="
        default-src 'self';
        font-src 'self' data:; 
        img-src 'self' data:; 
        style-src 'unsafe-inline'; 
        media-src 'self' data:; 
        script-src 'unsafe-inline' data:; 
        object-src 'self' data:; 
        frame-src 'self' data:;
        connect-src 'self' https://script.google.com https://script.googleusercontent.com;
    ">
    <body>
    
    <div class=container>
    <h2 id=title1>Human-AI Decision-Making <small> Making decisions with the assistance of AI</small></h2>
    
    <div id="attention" class="well" style="position: relative;">
        <b>ATTENTION:</b> During the whole experiment, please <b>DO NOT</b> refresh the browser. Otherwise, all data will be lost.
        <!-- Total score container -->
        <div id="total_score_div" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); font-weight: bold; font-size: 20px; color: black; display: block;">
            <!-- Score will be displayed here -->
            Total Score: Loading...
        </div>
    </div>
    
    
    <div class=tab-content>
    <div id=home class="tab-pane fade sf-hidden">
    </div>
    <div id=bottom style=display:block>
    <ul class=pager> <li>
    </li> </ul>
    <div class=progress>
    <div id=progressbar1 class="progress-bar progress-bar-striped progress-bar-animated" role=progressbar aria-valuenow=75 aria-valuemin=0 aria-valuemax=100 style=width:0%>0%</div>
    </div>
    </div>
    
    <div id=newdemo1 class="tab-pane fade active in" style=display:block>
    <div class=row>
    <div id=profile class=col-xs-5 style="height: 340px;">
    <h3 id=mortgage align=center>Mortgage Amount: Loading...</h3>
    <h5 id=commission align=center>Commission Amount: Loading...</h5>
    <h5 id=penalty align=center>Penalty Amount: Loading...</h5>
    
    <div class="main" id="profile_details" style="display: block;">
        <table id=tab1>
            <tbody><tr>
            <th>Annual Income</th>
            <td>Loading...</td>
            </tr>
            <tr>
            <th>Education</th>
            <td>Loading...</td>
            </tr>
            <tr>
            <th>Mortgage Term</th>
            <td>Loading...</td>
            </tr>
            <tr>
            <th>Total Assets</th>
            <td>Loading...</td>
            </tr>
            <tr>
            <th>Self Employed</th>
            <td>Loading...</td>
            </tr>
        </table>
    </div>
    </div>
    
    <div class=col-xs-7>
    
    
        <div class="container-fluid list-group-item list-group-item-warning" id="user_prediction_region" style="height: 340px;">
            <h3>Choose your AI assistant, then make your decision</h3>
        
            <p></p>
            <form id="decision" class="container-fluid list-group-item list-group-item-light" style="display: none;">
                <li class="list-group-item list-group-item-light">
                    <div class="form-group">
                        <div style="display: inline-block;">
                            <h4>
                                What is your decision?
                            </h4>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="firstdecision" value="0" id="reject-client">
                            <label class="form-check-label" for="reject-client">Reject Client</label>
                        </div>
        
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="firstdecision" value="1" id="accept-client">
                            <label class="form-check-label" for="accept-client">Accept Client</label>
                        </div>
                    </div>
                </li>
        
                <!-- Buttons and Result Area -->
                <div class="button-result-container" style="display: flex; align-items: center; margin-top: 10px;">
                    <!-- Lock in Choice Button -->
                    <button id="lock-in-choice" type="button" class="btn btn-primary" disabled>Lock in Choice</button>
        
                    <!-- Your Result Area -->
                    <div id="your_result" style="margin-left: 10px; display: none; font-weight: bold;">
                        <!-- Result will be displayed here -->
                    </div>

                    <!-- Show $ added to score -->
                    <div id="show_score" style="margin-left: 10px; display: none; font-weight: bold;">
                        <!-- Score will be displayed here -->
                    </div>
        
                    <!-- Finish and Next Button -->
                    <button id="next-task" type="button" class="btn btn-primary" data-dismiss="modal" style="margin-left: 10px; display: none;">Finish and Next</button>

                </div>
        
                <li id="showanswer_area" class="list-group-item list-group-item-light" style="display: none;">
                </li>
            </form>
        
            <!-- Countdown Timer -->
            <div id="countdown_timer" style="margin-left: 20px; margin-top: 20px; font-size: 20px; text-align: left; font-weight: bold; color: darkred;">
                Time Remaining: 03:00
            </div>
        </div>
</div>

</div> 
    <div id=wrap1 class="container-fluid list-group-item list-group-item-light">
    
        <div id="ai_confidence" style="display: flex; gap: 20px; align-items: center;">
            <!-- AI Prediction Text Box -->
            <div id="ai_text" 
                 style="width: 480px; 
                        height: 270px; 
                        border: 2px solid black; 
                        display: flex; 
                        align-items: flex-start; 
                        justify-content: flex-start; 
                        padding: 10px; 
                        background-color: white; 
                        font-size: 12px; 
                        overflow: hidden; 
                        white-space: pre-wrap;">
              <!-- Initially blank -->
            </div>
          
            <!-- AI Video Container -->
            <div id="video_container" 
                 style="width: 480px; 
                        height: 270px; 
                        border: 2px solid black; 
                        display: flex; 
                        align-items: center; 
                        justify-content: center; 
                        background-color: white;">
              <!-- Placeholder text or an empty space -->
              <p id="video_placeholder" 
                 style="display: block; 
                        font-size: 14px; 
                        color: gray; 
                        text-align: center;">
                Videobot will make prediction here
              </p>
              <video id="ai_video" width="480" height="270" style="display: none;">
                <source id="video_source" src="" type="video/mp4">
                Your browser does not support the video tag.
              </video>
            </div>
          
            <!-- AI Prediction Buttons -->
            <div id="ai_buttons" 
                 style="display: flex; 
                        flex-direction: column; 
                        gap: 10px; 
                        height: 270px; 
                        width: 100px;">
              <button id="textbot_btn" class="btn btn-primary" style="flex: 1;">Textbot</button>
              <button id="audiobot_btn" class="btn btn-primary" style="flex: 1;">Audiobot</button>
              <button id="videobot_btn" class="btn btn-primary" style="flex: 1;">Videobot</button>
            </div>
          </div>
          
        
          <script>
            // Global variables
            let textbot_text;
            let audiovideobot_text;
            let audiobot_video;
            let videobot_video;
            let text_played = false; // text plays only once because buffer seems to overflow if clicked whcih playing
            let subjects_choice;
            let subjects_time;
            let correct_answer; // Will be set after fetching data
            let commission;
            let penalty;
            let total_score; // Total score as a string
            let next_challenge;
            let lockInChoiceButton;
            let radioButtons;
            let choiceLocked = true;
            let total_score_new; // Updated total score after each decision
            let participantId;
        
            // Timer variables
            let timerElement;
            let timeRemaining;
            let countdownInterval;
        
            // Functions used by AI buttons
            function disableOtherButtons(exceptButtonId) {
                const buttons = ['textbot_btn', 'audiobot_btn', 'videobot_btn'];
                buttons.forEach(function (buttonId) {
                    if (buttonId !== exceptButtonId) {
                        document.getElementById(buttonId).disabled = true;
                    }
                });
            }

            function updateLockInButtonState() {
            // Enable the button only if BOTH conditions are true
                if (!choiceLocked) {
                    for (const radio of radioButtons) {
                        if (radio.checked) {
                            lockInChoiceButton.disabled = false;
                            return;
                        }
                    }
                }
                // Disable button if either condition fails
                lockInChoiceButton.disabled = true;
            }


            function showProfileDetails() {
                const profileDetails = document.getElementById("profile_details");
                profileDetails.style.display = "block"; // Make the container visible
                const decision = document.getElementById("decision");
                decision.style.display = "block"; // Make the decision form visible
            }
        
            // Timer functions
            function updateTimerDisplay() {
                const minutes = Math.floor(timeRemaining / 60);
                const seconds = timeRemaining % 60;
                timerElement.textContent = `Time Remaining: ${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            }
        
            function startCountdown() {
                if (countdownInterval) {
                    clearInterval(countdownInterval);
                }
                countdownInterval = setInterval(() => {
                    if (timeRemaining > 0) {
                        timeRemaining--;
                        updateTimerDisplay();
                    } else {
                        clearInterval(countdownInterval);
                        countdownInterval = null;
                        timerElement.textContent = "Time's up!";
                        // Trigger additional actions here when the timer reaches 0
                        // Show the profile details container
                        showProfileDetails();
                        subjects_time = 180; // Set the time to 180 seconds
                        // Disable the Lock in Choice button
                        lockInChoiceButton.disabled = true;
                        // Disable the radio buttons
                        for (const radio of radioButtons) {
                            radio.disabled = true;
                        }
                        // Show the Finish and Next button and your_result area
                        document.getElementById("next-task").style.display = "inline-block"; // Show the Finish and Next button
                        document.getElementById("your_result").style.display = "inline-block"; // Show the your_result area
                        document.getElementById("show_score").style.display = "inline-block"; // Show the show_score area
                        document.getElementById("your_result").textContent = "Ran out of time!"; // Display the message
                        document.getElementById("show_score").textContent = "Score: -$" + penalty.toLocaleString(); // Display the penalty
                        total_score_new = parseInt(total_score) - penalty; // Deduct the penalty from the total score
                        document.getElementById('total_score_div').textContent = 'Total Score: $' + total_score_new.toLocaleString(); // Update the total score
                    }
                }, 1000); // Update every second
            }
        
            // Function to extract query parameters
            function getQueryParameter(param) {
                var urlParams = new URLSearchParams(window.location.search);
                return urlParams.get(param);
            }
        
            // Function to fetch data from Google Apps Script
            function fetchData() {


                console.log('fetchData function is called.');
                console.log('in fetchdata: Next Challenge:', next_challenge);
                console.log('in fetchdata: Total Score:', total_score);
                console.log('in fetchdata: Participant ID:', participantId);


        
                var scriptURL = 'https://script.google.com/macros/s/AKfycbx_iZvLfmu3-DPt0UrXSg-Ytpejk1hxaT7OaJVVA7YOUMbG1b9UVoIdXyRPGXiExOXu/exec';
        
                fetch(scriptURL + '?next_challenge=' + next_challenge)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not OK');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('before error check: Data received:', data);
                        
        
                        if (data.error) {
                            throw new Error(data.error);
                        }
                        console.log('after error check: Data received:', data);

                        textbot_text = data['text_pred'];
                        audiovideobot_text = data['av_pred'];
                        audiobot_video = "https://vancuvrboy.github.io/CPEN541/" + data['audio_url'];
                        videobot_video = "https://vancuvrboy.github.io/CPEN541/" + data['video_url'];

                        // Update the Mortgage Amount
                        document.getElementById('mortgage').textContent = 'Mortgage Amount: $' + data['Mortgage'].toLocaleString();

                        // calculate commission (1% of mortgage amount)
                        commission = Math.round(data['Mortgage'] * 0.01);
                        // Update the commission
                        document.getElementById('commission').textContent = 'Commission Amount: +$' + commission.toLocaleString();

                        // calculate the penalty (0.5% of mortgage amount)
                        penalty = Math.round(data['Mortgage'] * 0.005);
                        // Update the penalty
                        document.getElementById('penalty').textContent = 'Penalty Amount: -$' + penalty.toLocaleString();

        
                        // Update the table of attributes
                        var tableBody = document.querySelector('#tab1 tbody');
                        tableBody.innerHTML = `
                            <tr>
                                <th>Annual Income</th>
                                <td>$${data['Income'].toLocaleString()}</td>
                            </tr>
                            <tr>
                                <th>Education</th>
                                <td>${data['Education']}</td>
                            </tr>
                            <tr>
                                <th>Mortgage Term</th>
                                <td>${data['Term']} Years</td>
                            </tr>
                            <tr>
                                <th>Total Assets</th>
                                <td>$${data['Assets'].toLocaleString()}</td>
                            </tr>
                            <tr>
                                <th>Self Employed</th>
                                <td>${data['SEmployed']}</td>
                            </tr>
                        `;
        
                        // Set the correct_answer variable
                        correct_answer = data['Approved'].toString();
        
                        // Initialize the timer
                        timeRemaining = 180; // 3 minutes in seconds
        
                        // Start the countdown timer
                        updateTimerDisplay();
                        startCountdown();
                        choiceLocked = false; // Enable the choice lock button
                        updateLockInButtonState(); // Update button based on new state
                    })
                    .catch(error => {
                        console.error('Error fetching data:', error);
                        document.getElementById('progress-text').textContent = 'Error loading data';
        
                        // Display the error message on the page
                        let errorMessageElement = document.getElementById('error-message');
                        if (errorMessageElement) {
                            errorMessageElement.textContent = error.message;
                        } else {
                            errorMessageElement = document.createElement('div');
                            errorMessageElement.id = 'error-message';
                            errorMessageElement.style.color = 'red';
                            errorMessageElement.textContent = error.message;
                            document.getElementById('progress-text').insertAdjacentElement('afterend', errorMessageElement);
                        }
                    });
            }

            // Function to handle page load events
            function pageloadEvents() {
                total_score = getQueryParameter('total_score') || '0'; // Default to '0' if not provided
                // update & display total score
                document.getElementById('total_score_div').textContent = 'Total Score: $' + parseInt(total_score).toLocaleString();
                next_challenge = getQueryParameter('next_challenge') || '1';
                // Ensure next_challenge is between 1 and 15
                const maxChallenges = 15;
                const challengeValue = Math.min(Math.max(next_challenge, 1), maxChallenges);

                // Calculate the progress percentage
                const progressPercentage = (challengeValue / maxChallenges) * 100;

                // Update the progress bar width and text
                const progressBar = document.getElementById('progressbar1');
                progressBar.style.width = `${progressPercentage}%`;
                progressBar.setAttribute('aria-valuenow', progressPercentage.toFixed(0));
                progressBar.innerText = `${progressPercentage.toFixed(0)}%`;
                // get participantId from the query string
                participantId = getQueryParameter('participantId') || 'P1234'; // Default to 'P1234' if not provided
                console.log('New Page: Participant ID:', participantId);
                console.log('New Page: Total Score:', total_score);
                console.log('New Page: Next Challenge:', next_challenge);
            }

            document.addEventListener('DOMContentLoaded', pageloadEvents);
        
            document.addEventListener("DOMContentLoaded", function () {
                // Now that DOM is loaded, we can access DOM elements
                lockInChoiceButton = document.getElementById("lock-in-choice");
                radioButtons = document.getElementsByName('firstdecision');
                // Assign DOM elements
                timerElement = document.getElementById("countdown_timer");

                // Ensure button is initially disabled
                // lockInChoiceButton.disabled = true;
        
                // Function to check if a radio button is selected
                // function checkRadioSelection() {
                    // if (choiceLocked) {
                        //lockInChoiceButton.disabled = true; // Ensure button stays disabled
                        //return;
                    //}
                    //for (const radio of radioButtons) {
                        //if (radio.checked) {
                            //lockInChoiceButton.disabled = false;
                            //return;
                        //}
                    //}
                    //lockInChoiceButton.disabled = true;
                //}

                // Initially update button state
                updateLockInButtonState();
        
                // Add event listeners to radio buttons
                for (const radio of radioButtons) {
                    radio.addEventListener('change', updateLockInButtonState);
                }

                //checkRadioSelection(); // Check initial state when DOM is loaded

                // next-task button click handler
                document.getElementById("next-task").addEventListener("click", function () {
                    // Redirect to the next challenge
                    // log the variables to the console
                    console.log("F&N pushed: Participant ID:", participantId);
                    console.log("F&N pushed: Total Score:", total_score_new);
                    console.log("F&N pushed: Next Challenge:", parseInt(next_challenge) + 1);
                    // redirect to the next challenge
                    window.location.href = `https://vancuvrboy.github.io/CPEN541/BotPage_new.htm?participantId=${participantId}&total_score=${total_score_new}&next_challenge=${parseInt(next_challenge) + 1}`;
                });
        
                // Handle Lock in Choice button click
                lockInChoiceButton.addEventListener("click", function () {
                    if (choiceLocked) {
                        return;
                    }
                    choiceLocked = true;

                    console.log("1. Lock in Choice clicked: Subject's Choice:", subjects_choice);
        
                    // Stop the countdown timer
                    clearInterval(countdownInterval);
                    countdownInterval = null;
        
                    // Record the value of the radio buttons
                    subjects_choice = undefined;
                    for (const radio of radioButtons) {
                        if (radio.checked) {
                            subjects_choice = radio.value;
                            break;
                        }
                    }
        
                    if (subjects_choice === undefined) {
                        alert("Please make a selection before locking in your choice.");
                        return;
                    }

                    console.log("2. Lock in Choice clicked: Subject's Choice:", subjects_choice);

                    // record the time it took the subject to click the lock in choice button
                    subjects_time = 180 - timeRemaining;
        
                    // Disable the Lock in Choice button
                    lockInChoiceButton.disabled = true;
        
                    // Disable the radio buttons
                    for (const radio of radioButtons) {
                        radio.disabled = true;
                    }
        
                    // Show the Finish and Next button and your_result area
                    document.getElementById("next-task").style.display = "inline-block";
                    document.getElementById("your_result").style.display = "inline-block";
                    document.getElementById("show_score").style.display = "inline-block";

                    console.log("3. Lock in Choice clicked: Subject's Choice:", subjects_choice);

                    // Compare subjects_choice with correct_answer
                    if (subjects_choice === correct_answer) {
                        document.getElementById("your_result").textContent = "Correct choice!";
                        // if the choice was accepted, add the commission to the score
                        if (subjects_choice == 1) {
                            document.getElementById("show_score").textContent = "Score: +$" + commission.toLocaleString();
                            // update the total score
                            total_score_new = parseInt(total_score) + commission;
                            document.getElementById('total_score_div').textContent = 'Total Score: $' + total_score_new.toLocaleString();
                        }
                        // if the choice was rejected, then add 0 to the score
                        else {
                            document.getElementById("show_score").textContent = "Score: +$0";
                            total_score_new = parseInt(total_score);
                        }
                    } else {
                        document.getElementById("your_result").textContent = "Incorrect choice...";
                        // if you are wrong, deduct the penalty from the score
                        document.getElementById("show_score").textContent = "Score: -$" + penalty.toLocaleString();
                        // update the total score
                        total_score_new = parseInt(total_score) - penalty;
                        document.getElementById('total_score_div').textContent = 'Total Score: $' + total_score_new.toLocaleString();
                    }
        
                    // Optionally, store subjects_choice and subjects_time for further processing
                    console.log("F&N shown: Subject's Choice:", subjects_choice);
                    console.log("F&N shown: Time Spent:", subjects_time);
                    console.log("F&N shown: Participant ID:", participantId);
                    console.log("F&N shown: Total Score:", total_score_new);
                    console.log("F&N shown: Next Challenge:", parseInt(next_challenge) + 1);
                });
        
                // AI Button Event Listeners
        
                // Textbot button click handler
                document.getElementById("textbot_btn").addEventListener("click", function () {
                    // Disable other buttons
                    disableOtherButtons('textbot_btn');
        
                    // Show the profile details container
                    showProfileDetails();
        
                    // Hide the video and show placeholder
                    const placeholder = document.getElementById("video_placeholder");
                    placeholder.style.display = "block"; // Show placeholder
                    const video = document.getElementById("ai_video");
                    video.style.display = "none"; // Hide video
                    video.pause(); // Stop video if playing
        
                    // Clear and start typing the text from textbot_text
                    const aiText = document.getElementById("ai_text");
        
                    // Typing effect logic
                    let index = 0;
                    function typeCharacter() {
                        if (index < textbot_text.length) {
                            aiText.textContent += textbot_text[index];
                            index++;
                            setTimeout(typeCharacter, 20); // Adjust typing speed here
                        }
                    }
                    if (!text_played) {
                        aiText.textContent = ""; // Clear the text box before typing
                        typeCharacter(); // Start the typing effect
                        text_played = true;
                    }
                });
        
                // Audiobot button click handler
                document.getElementById("audiobot_btn").addEventListener("click", function () {
                    // Disable other buttons
                    disableOtherButtons('audiobot_btn');
        
                    // Show the profile details container
                    showProfileDetails();
        
                    // Hide the placeholder text
                    const placeholder = document.getElementById("video_placeholder");
                    placeholder.style.display = "none";
        
                    // Update the video source to audiobot_video
                    const video = document.getElementById("ai_video");
                    const videoSource = document.getElementById("video_source");
                    videoSource.src = audiobot_video; // Set video source
                    video.load(); // Reload the video with the new source
                    video.style.display = "block"; // Show video
                    video.controls = false; // Ensure controls are disabled
                    video.play(); // Play the video
        
                    // Clear and start typing the text from audiovideobot_text
                    const aiText = document.getElementById("ai_text");
        
                    // Typing effect logic
                    let index = 0;
                    function typeCharacter() {
                        if (index < audiovideobot_text.length) {
                            aiText.textContent += audiovideobot_text[index];
                            index++;
                            setTimeout(typeCharacter, 20); // Adjust typing speed here
                        }
                    }
                    if (!text_played) {
                        aiText.textContent = ""; // Clear the text box before typing
                        typeCharacter(); // Start the typing effect
                        text_played = true;
                    }
                });
        
                // Videobot button click handler
                document.getElementById("videobot_btn").addEventListener("click", function () {
                    // Disable other buttons
                    disableOtherButtons('videobot_btn');
        
                    // Show the profile details container
                    showProfileDetails();
        
                    // Hide the placeholder text
                    const placeholder = document.getElementById("video_placeholder");
                    placeholder.style.display = "none";
        
                    // Update the video source to videobot_video
                    const video = document.getElementById("ai_video");
                    const videoSource = document.getElementById("video_source");
                    videoSource.src = videobot_video; // Set video source
                    video.load(); // Reload the video with the new source
                    video.style.display = "block"; // Show video
                    video.controls = false; // Ensure controls are disabled
                    video.play(); // Play the video
        
                    // Clear and start typing the text from audiovideobot_text
                    const aiText = document.getElementById("ai_text");

        
                    // Typing effect logic
                    let index = 0;
                    function typeCharacter() {
                        if (index < audiovideobot_text.length) {
                            aiText.textContent += audiovideobot_text[index];
                            index++;
                            setTimeout(typeCharacter, 20); // Adjust typing speed here
                        }
                    }
                    if (!text_played) {
                        aiText.textContent = ""; // Clear the text box before typing
                        typeCharacter(); // Start the typing effect
                        text_played = true;
                    }
                });
        
                console.log('DOMContentLoaded event listener is called.');
                console.log('before fetchdata: Next Challenge:', next_challenge);
                console.log('before fetchdata: Total Score:', total_score);
                console.log('before fetchdata: Participant ID:', participantId);
                // Call fetchData after DOM is ready and elements are assigned
                fetchData();
            });
        </script>

    <p></p>

    </div>
  
    <br>
    <ul class=pager> <li>
    
    <a id=go_to_questionnaire style=display:none href=#questionnaire>Answer Questions</a></li> </ul>
    <div id=traindemo1 class="tab-pane fade sf-hidden">

    </div>
    <div id=tutorial class="tab-pane fade sf-hidden">
    </div><div id=consent_form class="tab-pane fade sf-hidden">
    </div><div id=questionnaire class="tab-pane fade sf-hidden">
    </div><div class="modal sf-hidden" id=finishModal tabindex=-1 role=dialog aria-labelledby=finishModal aria-hidden=true>
    </div><div class=modal id=middle_break tabindex=-1 role=dialog aria-labelledby=quitModal aria-hidden=true style=display:none>
    </div><div class="modal sf-hidden" id=quitModal tabindex=-1 role=dialog aria-labelledby=quitModal aria-hidden=true>
    </div><div id=userrule style=display:none>
    </div></div>

   <ul class="nav nav-tabs" style=display:none>
    </ul></div>
    <style>/*!
    * Bootstrap v3.3.7 (http://getbootstrap.com)
    * Copyright 2011-2016 Twitter, Inc.
    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
    *//*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:active,a:hover{outline:0}svg:not(:root){overflow:hidden}button{-webkit-appearance:button}input[type=radio]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box}/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box}:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{-webkit-tap-highlight-color:rgba(0,0,0,0)}a:focus,a:hover{color:#23527c;text-decoration:underline}a:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}@media (min-width:768px){}@media (min-width:992px){}@media (min-width:1200px){}@media screen and (max-width:767px){}input[type=file]:focus,input[type=checkbox]:focus,input[type=radio]:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}@media screen and (-webkit-min-device-pixel-ratio:0){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}.btn{-ms-touch-action:manipulation;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{background-image:none;outline:0;-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#286090;border-color:#122b40}.btn-primary:hover{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.dropdown-toggle.btn-primary.focus,.open>.dropdown-toggle.btn-primary:focus,.open>.dropdown-toggle.btn-primary:hover{color:#fff;background-color:#204d74;border-color:#122b40}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{background-image:none}.fade{-webkit-transition:opacity .15s linear;-o-transition:opacity .15s linear}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-device-width:480px) and (orientation:landscape){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-width:767px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-width:767px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-width:767px){}@media (max-width:767px){}.pager li>a:focus,.pager li>a:hover{text-decoration:none;background-color:#eee}@media screen and (min-width:768px){}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-o-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}.progress{-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}.progress-bar{-webkit-box-shadow:inset 0-1px 0 rgba(0,0,0,.15);-webkit-transition:width .6s ease;-o-transition:width .6s ease}.progress-bar-striped{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);-webkit-background-size:40px 40px}.list-group-item:first-child{border-top-left-radius:4px;border-top-right-radius:4px}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.well{-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.05)}.modal{-webkit-overflow-scrolling:touch}@media (min-width:768px){}@media (min-width:992px){}@media all and (transform-3d),(-webkit-transform-3d){}@media screen and (min-width:768px){}.btn-group-vertical>.btn-group:after,.btn-group-vertical>.btn-group:before,.btn-toolbar:after,.btn-toolbar:before,.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before,.dl-horizontal dd:after,.dl-horizontal dd:before,.form-horizontal .form-group:after,.form-horizontal .form-group:before,.modal-footer:after,.modal-footer:before,.modal-header:after,.modal-header:before,.nav:after,.nav:before,.navbar-collapse:after,.navbar-collapse:before,.navbar-header:after,.navbar-header:before,.navbar:after,.navbar:before,.pager:after,.pager:before,.panel-body:after,.panel-body:before,.row:after,.row:before{display:table;content:" "}.btn-group-vertical>.btn-group:after,.btn-toolbar:after,.clearfix:after,.container-fluid:after,.container:after,.dl-horizontal dd:after,.form-horizontal .form-group:after,.modal-footer:after,.modal-header:after,.nav:after,.navbar-collapse:after,.navbar-header:after,.navbar:after,.pager:after,.panel-body:after,.row:after{clear:both}@-ms-viewport{width:device-width}@media (max-width:767px){}@media (max-width:767px){}@media (max-width:767px){}@media (max-width:767px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:1200px){}@media (min-width:1200px){}@media (min-width:1200px){}@media (min-width:1200px){}@media (max-width:767px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:1200px){}</style>
    
    <style>.highcharts-figure .chart-container{float:left}</style>
    <style>/*!
    * Bootstrap v3.3.7 (http://getbootstrap.com)
    * Copyright 2011-2016 Twitter, Inc.
    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
    *//*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}figure{display:block}a:active,a:hover{outline:0}b{font-weight:700}img{border:0}svg:not(:root){overflow:hidden}button,input{margin:0;font:inherit;color:inherit}button{overflow:visible}button{text-transform:none}button{-webkit-appearance:button}input[type=radio]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0}table{border-spacing:0}/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{font-size:10px;-webkit-tap-highlight-color:rgba(0,0,0,0)}body{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;line-height:1.42857143;color:#333;background-color:#fff}button,input{font-family:inherit;font-size:inherit}a{color:#337ab7;text-decoration:none}a:focus,a:hover{color:#23527c;text-decoration:underline}a:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}h2,h3,h4,h5{font-family:inherit;font-weight:500;line-height:1.1;color:inherit}h2 small{font-weight:400;line-height:1;color:#777}h2,h3{margin-top:20px;margin-bottom:10px}h2 small{font-size:65%}h4,h5{margin-top:10px;margin-bottom:10px}h2{font-size:30px}h3{font-size:24px}h4{font-size:18px}h5{font-size:14px}p{margin:0 0 10px}@media (min-width:768px){}ul{margin-top:0;margin-bottom:10px}@media (min-width:768px){}.container{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{margin-right:-15px;margin-left:-15px}.col-xs-5,.col-xs-7{position:relative;min-height:1px;padding-right:15px;padding-left:15px}.col-xs-5,.col-xs-7{float:left}.col-xs-7{width:58.33333333%}.col-xs-5{width:41.66666667%}@media (min-width:768px){}@media (min-width:992px){}@media (min-width:1200px){}table{background-color:transparent}@media screen and (max-width:767px){}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}input[type=radio]{margin:4px 0 0;line-height:normal}input[type=file]:focus,input[type=checkbox]:focus,input[type=radio]:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}@media screen and (-webkit-min-device-pixel-ratio:0){}.form-group{margin-bottom:15px}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}.btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{background-image:none;outline:0;-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#286090;border-color:#122b40}.btn-primary:hover{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.dropdown-toggle.btn-primary.focus,.open>.dropdown-toggle.btn-primary:focus,.open>.dropdown-toggle.btn-primary:hover{color:#fff;background-color:#204d74;border-color:#122b40}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{background-image:none}.fade{-webkit-transition:opacity .15s linear;-o-transition:opacity .15s linear;transition:opacity .15s linear}.fade.in{opacity:1}@media (min-width:768px){}.nav{padding-left:0;margin-bottom:0;list-style:none}.nav-tabs{border-bottom:1px solid #ddd}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-device-width:480px) and (orientation:landscape){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-width:767px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-width:767px){}@media (min-width:768px){}@media (min-width:768px){}@media (min-width:768px){}@media (max-width:767px){}@media (max-width:767px){}.pager{padding-left:0;margin:20px 0;text-align:center;list-style:none}.pager li{display:inline}.pager li>a{padding:5px 14px;background-color:#fff;border:1px solid #ddd;border-radius:15px}.pager li>a:focus,.pager li>a:hover{text-decoration:none;background-color:#eee}@media screen and (min-width:768px){}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-o-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}.progress{height:20px;margin-bottom:20px;overflow:hidden;background-color:#f5f5f5;border-radius:4px;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}.progress-bar{float:left;height:100%;font-size:12px;line-height:20px;color:#fff;text-align:center;background-color:#337ab7;-webkit-box-shadow:inset 0-1px 0 rgba(0,0,0,.15);box-shadow:inset 0-1px 0 rgba(0,0,0,.15);-webkit-transition:width .6s ease;-o-transition:width .6s ease;transition:width .6s ease}.progress-bar-striped{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);-webkit-background-size:40px 40px;background-size:40px 40px}.list-group-item{position:relative;display:block;padding:10px 15px;margin-bottom:-1px;background-color:#fff;border:1px solid #ddd}.list-group-item:first-child{border-top-left-radius:4px;border-top-right-radius:4px}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.list-group-item-info{color:#31708f;background-color:#d9edf7}.list-group-item-warning{color:#8a6d3b;background-color:#fcf8e3}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.05);box-shadow:inset 0 1px 1px rgba(0,0,0,.05)}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;overflow:hidden;-webkit-overflow-scrolling:touch;outline:0}@media (min-width:768px){}@media (min-width:992px){}@media all and (transform-3d),(-webkit-transform-3d){}@media screen and (min-width:768px){}.btn-group-vertical>.btn-group:after,.btn-group-vertical>.btn-group:before,.btn-toolbar:after,.btn-toolbar:before,.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before,.dl-horizontal dd:after,.dl-horizontal dd:before,.form-horizontal .form-group:after,.form-horizontal .form-group:before,.modal-footer:after,.modal-footer:before,.modal-header:after,.modal-header:before,.nav:after,.nav:before,.navbar-collapse:after,.navbar-collapse:before,.navbar-header:after,.navbar-header:before,.navbar:after,.navbar:before,.pager:after,.pager:before,.panel-body:after,.panel-body:before,.row:after,.row:before{display:table;content:" "}.btn-group-vertical>.btn-group:after,.btn-toolbar:after,.clearfix:after,.container-fluid:after,.container:after,.dl-horizontal dd:after,.form-horizontal .form-group:after,.modal-footer:after,.modal-header:after,.nav:after,.navbar-collapse:after,.navbar-header:after,.navbar:after,.pager:after,.panel-body:after,.row:after{clear:both}@-ms-viewport{width:device-width}@media (max-width:767px){}@media (max-width:767px){}@media (max-width:767px){}@media (max-width:767px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:1200px){}@media (min-width:1200px){}@media (min-width:1200px){}@media (min-width:1200px){}@media (max-width:767px){}@media (min-width:768px) and (max-width:991px){}@media (min-width:992px) and (max-width:1199px){}@media (min-width:1200px){}</style>
    
   <style>table{width:100%;border-collapse:collapse}table tr{border-bottom:solid 2px white}table tr:last-child{border-bottom:none}table th{position:relative;width:30%;background-color:#7d7d7d;color:white;text-align:center;padding:10px 0}table th:after{display:block;content:"";width:0px;height:0px;position:absolute;top:calc(50% - 10px);right:-10px;border-left:10px solid #7d7d7d;border-top:10px solid transparent;border-bottom:10px solid transparent}table td{width:70%;text-align:center;background-color:#eee;padding:10px 0}.main{margin:20px auto;width:80%}#wrap1{display:flex;justify-content:flex-start}#wrap2{display:flex;justify-content:flex-start;flex-wrap:wrap}</style>
    
    </body></html>
   