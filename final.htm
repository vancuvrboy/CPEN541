<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Leaderboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 20px;
            text-align: center;
        }
        h1 {
            margin-bottom: 30px;
            color: #0a375f;
        }
        table {
            margin: 20px auto;
            border-collapse: collapse;
            width: 80%;
        }
        th, td {
            border: 1px solid #ccc;
            padding: 10px;
            text-align: center;
        }
        th {
            background-color: #0a375f;
            color: white;
        }
        .highlight {
            background-color: #ffc107;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Congratulations! You ranked <span id="participant-rank"></span> out of <span id="num-scores"></span>!</h1>
    <table>
        <thead>
            <tr>
                <th>Rank</th>
                <th>Score</th>
            </tr>
        </thead>
        <tbody id="leaderboard-table">
            <!-- Filled dynamically -->
        </tbody>
    </table>
    <script>
        // Function to extract query parameters
        function getQueryParameter(param) {
            var urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        // Function to fetch leaderboard data
        async function fetchLeaderboardData(participantId, totalScore) {
            try {
                const response = await fetch(
                    `https://script.google.com/macros/s/AKfycbwOLqXgnp5ksHsRpMZbmWSKXH3w_Wl2mn6PhWQpb4ViSNJx-gMC0pU7o7qb0BB5nqsWpw/exec?participantId=${participantId}&total_score=${totalScore}`
                );
                const data = await response.json();
                console.log("Leaderboard data:", data);
                renderLeaderboard(data);
            } catch (error) {
                console.error("Error fetching leaderboard data:", error);
            }
        }

        // Function to render leaderboard
        function renderLeaderboard(data) {
            const { allScores, partPos, numScoresSent } = data;
            const leaderboardTable = document.getElementById("leaderboard-table");
            const participantRank = document.getElementById("participant-rank");
            const numScores = document.getElementById("num-scores");

            participantRank.textContent = partPos;
            numScores.textContent = numScoresSent;

            leaderboardTable.innerHTML = ""; // Clear existing rows
            allScores.forEach((score, index) => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${score}</td>
                `;
                if (index + 1 === partPos) {
                    row.classList.add("highlight");
                }
                leaderboardTable.appendChild(row);
            });
        }

        // Extract participantId and total_score from the URL
        const participantId = getQueryParameter("participantId") || "P1234";
        const totalScore = getQueryParameter("total_score") || 50000;

        // Fetch leaderboard data
        fetchLeaderboardData(participantId, totalScore);
    </script>
</body>
</html>